<?php
/**
 * Created by PhpStorm.
 * User: Silas
 * Date: 19.03.2016
 * Time: 13:54
 */

namespace Application\Form;

use Zend\Form\Element;
use Zend\Form\Form;
use Zend\InputFilter\InputInterface;
use Zend\Mvc\Controller\Plugin\FlashMessenger;

abstract class MyForm extends Form{
    private $flashMessenger;

    public function __construct(FlashMessenger $flashMessenger = null, $name = null, $options = array())
    {
        parent::__construct($name, $options);
        $this->flashMessenger = $flashMessenger;

        $this->setAttribute("class", "myForm");
        $this->addEssentials();
        $this->addElements();
    }

    /**
     * @return FlashMessenger
     */
    public function getFlashMessenger()
    {
        return $this->flashMessenger;
    }

    public function isValid()
    {
        if (!parent::isValid())
        {
            if ($this->flashMessenger != null) {
                $messages = $this->getInputFilter()->getInvalidInput();
                foreach ($messages as $message) {
                    $this->addErrorMessage($message->getMessages());
                }
            }
            return false;
        }
        return true;
    }

    private function addErrorMessage($message)
    {
        if (is_string($message))
        {
            $this->flashMessenger->addErrorMessage($message);
        }
        else if (is_array($message))
        {
            foreach($message as $singleMessage)
            {
                $this->addErrorMessage($singleMessage);
            }
        }
        else if ($message instanceof InputInterface)
        {
            $this->addErrorMessage($message->getMessages());
        }
    }

    public function add($elementOrFieldset, array $flags = array())
    {
        if ($elementOrFieldset instanceof Element) {
            if (!$elementOrFieldset->hasAttribute("required")) {
                $elementOrFieldset->setAttribute("required", "true");
            }
            if (!$elementOrFieldset->hasAttribute("id")) {
                $elementOrFieldset->setAttribute("id", $elementOrFieldset->getName());
            }
            if (!$elementOrFieldset->hasAttribute("class")) {
                $elementOrFieldset->setAttribute("class", "form-control");
            }
        }

        return parent::add($elementOrFieldset, $flags); // TODO: Change the autogenerated stub
    }

    protected function addSubmitButton($value = "Absenden")
    {
        $submitButton = new Element\Submit("submitButton");
        $submitButton->setValue($value);
        $this->add($submitButton);
    }
    
    abstract public function addElements();

    public function addEssentials(){}
}